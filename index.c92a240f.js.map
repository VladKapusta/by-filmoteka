{"mappings":"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","sources":["src/js/refs.js","src/js/fetch-films.js","src/js/genre.js","src/js/render-popular-film.js","src/js/modal.js","src/js/local-stor.js","src/js/render-modal-markup.js","src/js/search-films-to-name.js"],"sourcesContent":["const refs = {\n  cardsList: document.querySelector('.cards__list'),\n  cardsItem: document.querySelector('.cards__item'),\n  modal: document.querySelector('.backdrop'),\n  closeModal: document.querySelector('.modal__close'),\n  modalInform: document.querySelector('.wrraper-inform'),\n  buttonModal: document.querySelector('.modal__buttons'),\n \n  inputHeader: document.querySelector('.serch-films__input'),\n  btnSearchFilm: document.querySelector('.serch-films__button'),\n  btnEndPage: document.querySelector('.page__button-end'),\n  btnNextPage: document.querySelector('.page__button-next'),\n  //=====================================\n  btnsLibrary: document.querySelector('.lib__button'),\n  libCardsList: document.querySelector('.library__cards'),\n\n};\nexport { refs };\n","export default class fatchFilms {\n  constructor() {\n    this.API = 'https://api.themoviedb.org/3/';\n    this.API_KEY = 'f337b3367ff87f6c35f27ef8641676b2';\n    this.page = 1;\n    this.id = '';\n  }\n\n  searchPopularFilms() {\n    return fetch(`${this.API}trending/movie/day?api_key=${this.API_KEY}&page=${this.page}`).then(res =>\n      res.json()\n    );\n  }\n  searchFilmsToId() {\n    return fetch(`${this.API}movie/${this.id}?api_key=${this.API_KEY}`).then(res =>\n      res.json()\n    );\n  }\n  searchFilmsToName(inputValue) {\n    return fetch(`${this.API}search/movie?api_key=${this.API_KEY}&language=en-US&query=${inputValue}`).then(res =>\n    res.json()\n  );\n  }\n  setFilmId(newId){\n    this.id = newId\n  }\n  getId() {\n    return this.id\n  }\n  pageIncr() {\n    this.page +=1\n  }\n  pageDecr() {\n    this.page -=1\n  }\n  setPage(newPage) {\n    this.page = newPage\n  }\n  getPage() {\n    return this.page\n  }\n}\n\n// fetch(\n//   'https://api.themoviedb.org/3/movie/popular?api_key=f337b3367ff87f6c35f27ef8641676b2'\n// ).then(res => console.log(res));\n","const genres = {\n  genres: [\n    {\n      id: 28,\n      name: 'Action',\n    },\n    {\n      id: 12,\n      name: 'Adventure',\n    },\n    {\n      id: 16,\n      name: 'Animation',\n    },\n    {\n      id: 35,\n      name: 'Comedy',\n    },\n    {\n      id: 80,\n      name: 'Crime',\n    },\n    {\n      id: 99,\n      name: 'Documentary',\n    },\n    {\n      id: 18,\n      name: 'Drama',\n    },\n    {\n      id: 10751,\n      name: 'Family',\n    },\n    {\n      id: 14,\n      name: 'Fantasy',\n    },\n    {\n      id: 36,\n      name: 'History',\n    },\n    {\n      id: 27,\n      name: 'Horror',\n    },\n    {\n      id: 10402,\n      name: 'Music',\n    },\n    {\n      id: 9648,\n      name: 'Mystery',\n    },\n    {\n      id: 10749,\n      name: 'Romance',\n    },\n    {\n      id: 878,\n      name: 'Science Fiction',\n    },\n    {\n      id: 10770,\n      name: 'TV Movie',\n    },\n    {\n      id: 53,\n      name: 'Thriller',\n    },\n    {\n      id: 10752,\n      name: 'War',\n    },\n    {\n      id: 37,\n      name: 'Western',\n    },\n  ],\n};\n\n\nexport default function genre(genre_ids) {\n  const genress = {};\n  for (const ganre of genres.genres) {\n    genress[ganre.id] = ganre.name;\n  }\n  const arrGanres = genre_ids.map(el => genress[el]);\n  if (arrGanres.length < 3) {\n    return arrGanres.join(', ');\n  }\n  return arrGanres.slice(1, 3).concat('Other').join(', ');\n}\n\n\n","import { refs } from './refs';\nimport fatchFilms from './fetch-films';\nimport genre from './genre';\n\nconst featchFilms = new fatchFilms();\nlet films;\nasync function renderFilmCards() {\n  films = await featchFilms.searchPopularFilms();\n\n  const markupPopularFilms = films.results\n    .map(({ original_title, genre_ids, release_date, poster_path, id }) => {\n      return ` <li class=\"cards__item\" data-id=\"${id}\">\n      <div class=\"film\">\n        <div class=\"poster__wrraper\">\n        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" class=\"poster\">\n        </div>\n        <div class=\"film__titel\">\n        <h2 class=\"film__name\">${original_title}</h2>\n        <div class=\"film__pre-info\">\n        <p class=\"film__gener\">${genre(genre_ids)}</p>\n        <span>|</span>\n        <p class=\"film__reliz\">${release_date.slice(0, 4)}</p>\n        </div>\n        </div>\n        </div>\n        </li>`;\n    })\n    .join(' ');\n  refs.cardsList.innerHTML += markupPopularFilms;\n}\nrenderFilmCards();\n\n// =============================\n\nconst preBeforeActiveBtn = document.querySelector('button[data-numb=\"1\"]');\nconst beforeActiveBtn = document.querySelector('button[data-numb=\"2\"]');\nconst activeBtn = document.querySelector('button[data-numb=\"3\"]');\nconst afterActivBtn = document.querySelector('button[data-numb=\"4\"]');\nconst nextAfterActiveBtn = document.querySelector('button[data-numb=\"5\"]');\n\nrefs.btnNextPage.addEventListener('click', onNextPage);\nfunction onNextPage() {\n  featchFilms.pageIncr();\n  //============\n\n  const btnPreActive = document.querySelector(\n    `button[data-numb=\"${featchFilms.getPage() - 1}\"]`\n  );\n\n  const btnActive = document.querySelector(\n    `button[data-numb=\"${featchFilms.getPage()}\"]`\n  );\n\n  if (featchFilms.getPage() <= 3) {\n    btnActive.classList.add('btn-page-curr');\n    btnPreActive.classList.remove('btn-page-curr');\n  } else if (featchFilms.getPage() > 3) {\n     btnLog(featchFilms.getPage());\n  }\n  //==============\n  refs.btnEndPage.classList.remove('page__button-end');\n  refs.cardsList.innerHTML = '';\n  renderFilmCards();\n}\n//-------------------------\n\nrefs.btnEndPage.addEventListener('click', onEndPage);\nfunction onEndPage() {\n  featchFilms.pageDecr();\n  //=======\n  const btnActive = document.querySelector(\n    `button[data-numb=\"${featchFilms.getPage()}\"]`\n  );\n  const btnAfterActive = document.querySelector(\n    `button[data-numb=\"${featchFilms.getPage() + 1}\"]`\n  );\n\n  if (featchFilms.getPage() < 3) {\n    btnActive.classList.add('btn-page-curr');\n    btnAfterActive.classList.remove('btn-page-curr');\n  } else if (featchFilms.getPage() >= 3) {\n    btnLog(featchFilms.getPage());\n  }\n  //=======\n  refs.cardsList.innerHTML = '';\n  renderFilmCards();\n  if (featchFilms.getPage() === 1) {\n    refs.btnEndPage.classList.add('page__button-end');\n    return;\n  }\n}\n\nfunction btnLog(numbPage) {\n  preBeforeActiveBtn.textContent = numbPage - 2;\n  beforeActiveBtn.textContent = numbPage - 1;\n  activeBtn.textContent = numbPage;\n  afterActivBtn.textContent = numbPage + 1;\n  nextAfterActiveBtn.textContent = numbPage + 2;\n}\n\nconst listBtnPages = document.querySelector('.page__list');\nlistBtnPages.addEventListener('click', onBtnNumbPage);\n\nfunction onBtnNumbPage(e) {\n  let numbPage = +e.target.textContent;\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  let currentActivBtn = document.querySelector('.btn-page-curr');\n  \n  if (currentActivBtn) {\n    currentActivBtn.classList.remove('btn-page-curr');\n  }\n  e.target.classList.add('btn-page-curr');\n\n  featchFilms.setPage(numbPage);\n  refs.cardsList.innerHTML = '';\n  renderFilmCards();\n  if (numbPage === 1) {\n    refs.btnEndPage.classList.add('page__button-end');\n    return;\n  }\n  console.log(currentActivBtn)\n}\n","import { refs } from './refs';\n\nrefs.closeModal.addEventListener('click', onCloseBtn);\nfunction onCloseBtn() {\n  refs.modal.classList.add('is-hidden');\n}\n\n// refs.buttons.addEventListener('click', onButtonAddLocalHost);\n\n// function onButtonAddLocalHost(e) {\n//   if (e.target.nodeName !== 'BUTTON') {\n//     return;\n//   }\n//   if (e.target.classList.contains('button-watched')) {\n//     localStorage.setItem('watched', refs.modal);\n//   }\n//   if (e.target.classList.contains('button-queue')) {\n//     localStorage.setItem('queue', '2');\n//   }\n// }\n","const save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error(\"Set state error: \", error.message);\n    }\n  };\n  \n  const load = key => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error(\"Get state error: \", error.message);\n    }\n  };\n  \n  export default {\n    save,\n    load,\n  };\n","import { refs } from './refs';\nimport fatchFilms from './fetch-films';\nimport localStorade from './local-stor';\n\nconst featchFilms = new fatchFilms();\nlet filmToId;\nlet filmId;\nrefs.cardsList.addEventListener('click', onCardItem);\n\nasync function onCardItem(e) {\n  filmId = e.target.closest('.cards__item').dataset.id;\n  featchFilms.setFilmId(filmId);\n  filmToId = await featchFilms.searchFilmsToId();\n\n  if (refs.modalInform.textContent.trim() !== '') {\n    refs.modalInform.innerHTML = '';\n  }\n  renderModal(filmToId);\n\n  refs.modal.classList.remove('is-hidden');\n  const modalBtn = document.querySelector('.modal__buttons');\n  modalBtn.addEventListener('click', onButtonAddLocalStorege);\n\n  if (localStorade.load('watched') && localStorade.load('queue')) {\n    const watched = localStorade.load('watched');\n    const queue = localStorade.load('queue');\n    if (watched.some(el => el.id === +filmId)) {\n      modalBtn.querySelector('.button-watched').textContent = 'remove watched';\n    }\n    if (queue.some(el => el.id === +filmId)) {\n      modalBtn.querySelector('.button-queue').textContent = 'remove queue';\n    }\n  }\n}\n\nfunction renderModal({\n  original_title,\n  genres,\n  overview,\n  vote_average,\n  vote_count,\n  poster_path,\n  popularity,\n}) {\n  const genr = genres\n    .map(el => el.name)\n    .slice(0, 3)\n    .join(', ');\n\n  const markupCardFilm = `\n      <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" class=\"modal__poster\" width=\"240\" height=\"357\">\n    </div>\n    <h2 class=\"modal__titel\">${original_title}</h2>\n    <div class=\"modal__info-film\">\n      <ul class=\"modal__info-list\">\n          <li class=\"modal__info-item\">\n              <p class=\"modal__vote\">Vote / Votes</p>\n          </li>\n          <li class=\"modal__info-item\">\n              <p class=\"modal__popularity\">Popularity</p>\n          </li>\n          <li class=\"modal__info-item\">\n              <p class=\"modal__origin-titel\">Original Title</p>\n          </li>\n          <li class=\"modal__info-item\">\n              <p class=\"modal__genre\">Genre</p>\n          </li>\n      </ul>\n      <ul class=\"modal__value-list\">\n          <li class=\"modal__value-item\">\n              <p class=\"value-vote\"><span>${vote_average}</span>/ ${vote_count}</p>\n          </li>\n          <li class=\"modal__value-item\">\n              <p class=\"value-popularity\">${popularity}</p>\n          </li>\n          <li class=\"modal__value-item\">\n              <p class=\"value-origin-titel\">${original_title}</p>\n          </li>\n          <li class=\"modal__value-item\">\n              <p class=\"value-genre\">${genr} </p>\n          </li>\n      </ul>\n    </div>\n    <div class=\"modal__about\">\n      <h2 class=\"modal__about-titel\">About</h2>\n      <p class=\"modal__about-text\">${overview}</p>\n    </div>\n    <div class=\"modal__buttons\">\n            <button class=\"modal__button button-watched\">add to watched</button>\n            <button class=\"modal__button button-queue\">add to queue</button>\n    </div>`;\n\n  refs.modalInform.innerHTML += markupCardFilm;\n}\n\n//=====================//=====================\nfunction onButtonAddLocalStorege(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  let text = e.target.textContent;\n  const keyWord = text.slice(7, text.length);\n\n  let arrFilms =\n    localStorade.load(keyWord) === undefined ? [] : localStorade.load(keyWord);\n\n  const {\n    id,\n    original_title,\n    genres,\n    overview,\n    vote_average,\n    vote_count,\n    poster_path,\n    release_date,\n  } = filmToId;\n  if (e.target.textContent === `remove ${keyWord}`) {\n    e.target.textContent = `add to ${keyWord}`;\n    const aa = arrFilms.filter(el => el.id !== id);\n    localStorade.save(keyWord, aa);\n  }\n  const arrFilmsId = arrFilms.map(el => el.id);\n  if (!arrFilmsId.includes(id)) {\n    arrFilms.push({\n      id,\n      original_title,\n      genres,\n      overview,\n      vote_average,\n      vote_count,\n      poster_path,\n      release_date,\n    });\n    e.target.textContent = `remove ${keyWord}`;\n    localStorade.save(keyWord, arrFilms);\n  }\n}\n","import { refs } from './refs';\nimport fatchFilms from './fetch-films';\nimport genre from './genre';\n\nconst featchFilms = new fatchFilms();\n\n\nrefs.btnSearchFilm.addEventListener('click', onBtnSearchFilm);\n\nasync function onBtnSearchFilm(e) {\n  e.preventDefault();\n  refs.cardsList.innerHTML = '';\n  const aa = await featchFilms.searchFilmsToName(refs.inputHeader.value);\n  const markupPopularFilms = aa.results\n    .map(({ original_title, genre_ids, release_date, poster_path, id }) => {\n      return ` <li class=\"cards__item\" data-id=\"${id}\">\n  <div class=\"film\">\n    <div class=\"poster__wrraper\">\n    <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" class=\"poster\">\n    </div>\n    <div class=\"film__titel\">\n    <h2 class=\"film__name\">${original_title}</h2>\n    <div class=\"film__pre-info\">\n    <p class=\"film__gener\">${genre(genre_ids)}</p>\n    <span>|</span>\n    <p class=\"film__reliz\">${release_date.slice(0, 4)}</p>\n    </div>\n    </div>\n    </div>\n    </li>`;\n    })\n    .join(' ');\n  refs.cardsList.innerHTML += markupPopularFilms;\n\n  refs.inputHeader.value = ''\n\n  // console.log(refs.inputHeader.value)\n}\n\n\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","cardsList","document","querySelector","cardsItem","modal","closeModal","modalInform","buttonModal","inputHeader","btnSearchFilm","btnEndPage","btnNextPage","btnsLibrary","libCardsList","$b4a7e464f5ca5a67$export$2e2bcd8739ae039","searchPopularFilms","fetch","this","API","API_KEY","page","then","res","json","searchFilmsToId","id","searchFilmsToName","inputValue","setFilmId","newId","getId","pageIncr","pageDecr","setPage","newPage","getPage","constructor","$2ef557511493f775$var$genres","name","$2ef557511493f775$export$2e2bcd8739ae039","genre_ids","genress","ganre","arrGanres","map","el","length","join","slice","concat","$f1384fbba3052fbb$var$featchFilms","$f1384fbba3052fbb$var$films","async","$f1384fbba3052fbb$var$renderFilmCards","markupPopularFilms","results","original_title","release_date","poster_path","innerHTML","$f1384fbba3052fbb$var$preBeforeActiveBtn","$f1384fbba3052fbb$var$beforeActiveBtn","$f1384fbba3052fbb$var$activeBtn","$f1384fbba3052fbb$var$afterActivBtn","$f1384fbba3052fbb$var$nextAfterActiveBtn","$f1384fbba3052fbb$var$btnLog","numbPage","textContent","addEventListener","btnPreActive","btnActive","classList","add","remove","btnAfterActive","e","target","nodeName","currentActivBtn","console","log","$bb1f0bd7c1d5b74e$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","message","getItem","undefined","parse","$e0c57c67a135bb08$var$featchFilms","$e0c57c67a135bb08$var$filmToId","$e0c57c67a135bb08$var$filmId","$e0c57c67a135bb08$var$onButtonAddLocalStorege","text","keyWord","arrFilms","load","genres","overview","vote_average","vote_count","aa","filter","save","includes","push","closest","dataset","trim","popularity","genr","markupCardFilm","$e0c57c67a135bb08$var$renderModal","modalBtn","watched","queue","some","$5830597c728d35a3$var$featchFilms","preventDefault"],"version":3,"file":"index.c92a240f.js.map"}